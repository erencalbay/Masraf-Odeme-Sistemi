// <auto-generated />
using System;
using Data.DbContextCon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(VdDbContext))]
    partial class VdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entity.Demand", b =>
                {
                    b.Property<int>("DemandNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DemandNumber"));

                    b.Property<int>("DemandId")
                        .HasColumnType("integer");

                    b.Property<int>("DemandType")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("integer");

                    b.Property<string>("RejectionResponse")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("DemandNumber");

                    b.HasIndex("DemandId");

                    b.HasIndex("DemandNumber")
                        .IsUnique();

                    b.ToTable("Demand", "dbo");
                });

            modelBuilder.Entity("Data.Entity.Info", b =>
                {
                    b.Property<int>("InfoNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InfoNumber"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("InfoType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("isDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("InfoNumber");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InfoNumber")
                        .IsUnique();

                    b.HasIndex("Information", "InfoType")
                        .IsUnique();

                    b.ToTable("Info", "dbo");
                });

            modelBuilder.Entity("WebAPI.Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("False");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.HasKey("EmployeeNumber");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.ToTable("Employee", "dbo");
                });

            modelBuilder.Entity("Data.Entity.Demand", b =>
                {
                    b.HasOne("WebAPI.Entity.Employee", "Employee")
                        .WithMany("Demands")
                        .HasForeignKey("DemandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data.Entity.Info", b =>
                {
                    b.HasOne("WebAPI.Entity.Employee", "Employee")
                        .WithMany("Infos")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebAPI.Entity.Employee", b =>
                {
                    b.Navigation("Demands");

                    b.Navigation("Infos");
                });
#pragma warning restore 612, 618
        }
    }
}
